#!/usr/bin/env python3
import sys
import os
import subprocess

alldeps = {}

def usage():
    print("Usage:\n"
          "     To list all missing depencies:\n"
          "     > pydep <pyfile1> ...\n"
          "\n"
          "     To list all missing depencies except some:\n"
          "     > pydep -x modul1,mod2 <pyfile1> ...\n"
          "       e.g. pydep -x redis,lib *.py to list all missing dependencies.\n"
          "       The list would skip all modules with name containing redis or lib\n"
          "\n"
          "     To list the source file names as well:\n"
          "     > pydep -v <pyfile1> ...\n")


flatlist = []
def list_recursive(root):
    global flatlist
    root = os.path.abspath(root)
    for item in os.listdir(root):
        full_path = os.path.join(root, item).strip()
        if os.path.isdir(full_path):
            fls = list_recursive(full_path)
            if fls:
                flatlist += fls
        else:
            if full_path.endswith('.py')\
                    and '.' not in os.path.dirname(full_path):
                flatlist.append(full_path)


alldeps = {}
filelist = sys.argv[1:]
skip = ''
verbose = False
try:
    if sys.argv[1] == '-v':
        verbose = True
        sys.argv[2]
        filelist = sys.argv[2:]
        sys.argv.remove(sys.argv[1])
    if sys.argv[1] == '-x':
        skip = sys.argv[2].split(',')
        filelist = sys.argv[3:]
except IndexError:
    usage()
    exit(1)

for name in filelist:
    if os.path.isdir(name):
        list_recursive(name)
    else:
        flatlist.append(name)

for srcfile in flatlist:
    with open(srcfile, 'r') as fp:
        if sys.stdout.isatty():
            print(f"\u001b[1000D\u001b[0K{srcfile}\u001b[0m", end='')
            sys.stdout.flush()
        alldeps[srcfile] = []
        line = fp.readline()
        while line:
            # The line could be...
            # import xyz
            # or 
            # from xyz import foo
            # or
            # from a.b...xyz import foo
            line = line.strip()
            if ('import' in line
                    and (line.startswith('import') or line.startswith('from'))
                    and '"' not in line
                    and '\'' not in line):
                code = 'python3 -c "' + line.strip() + '"'
                p = subprocess.Popen(code, shell=True,
                                     stdin=None,
                                     stdout=subprocess.PIPE,
                                     stderr=subprocess.PIPE)
                p.communicate()
                if p.returncode:
                    words = line.split(' ')
                    modname = words[1].split('.')[-1:][0].strip()
                    for toskip in skip:
                        if toskip in modname:
                            break

                    if toskip not in modname\
                            and modname not in alldeps[srcfile]: 
                        alldeps[srcfile].append(modname)
            line = fp.readline()
if sys.stdout.isatty():
    print("\u001b[1000D\u001b[0K\u001b[0m", end='')
if verbose:
    lengths = []
    ln = 0
    for f in alldeps:
        modules = alldeps[f]
        lengths += list(map(lambda s:len(s), modules))
    if lengths:
        ln = max(lengths)

for f in alldeps:
    modules = alldeps[f]
    for m in modules:
        if verbose:
            print(f"{m.ljust(ln, ' ')}   {f}")
        else:
            print(f"{m}")

exit(0)
